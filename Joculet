#include <iostream>
#include <cstring>
#include <time.h>
#include <conio.h>
#include <windows.h>
#define COL 40
#define LIN 20
#define STOP 0
#define STANGA 1
#define STANGAJOS 2
#define STANGASUS 3
#define DREAPTA 4
#define DREAPTAJOS 5
#define DREAPTASUS 6
using namespace std;

struct bila {
	int x;
	int y;
	int directie;
};

bila b;
int mat[LIN][COL];
int scor1, scor2;
bool gameover;

void setup()
{
	gameover = false;
	b.x = LIN/2;
	b.y = COL/2;
	scor1 = 0;
	scor2 = 0;
	b.directie = STOP;
	for (int i = 0; i < COL; i++)
	{
		mat[0][i] = 1;
		mat[LIN - 1][i] = 1;
	}
	mat[b.x][b.y] = 2;
	mat[LIN / 2 - 1][0] = mat[LIN / 2][0] = mat[LIN / 2 + 1][0] = mat[LIN / 2 + 2][0] = 1;
	mat[LIN / 2 - 1][COL-1] = mat[LIN / 2][COL - 1] = mat[LIN / 2 + 1][COL - 1] = mat[LIN / 2 + 2][COL - 1] = 1;
}


void draw()
{
	system("cls");
	char c = 219;
	
	for(int i=0;i<LIN;i++)
		for (int j = 0; j < COL; j++)
		{
			switch (mat[i][j])
			{
			case 0:
				cout << " ";
				break;
			case 1:
				cout << c;
				break;
			case 2:
				cout << 'o';
				break;
			}
			if (j == COL - 1) cout << endl;
		}
	cout << "Scor 1: " << scor1<< endl <<"Scor 2: "<< scor2 << endl;
	
}

void player1MoveUp()
{
	if (mat[1][0]!=1)
		for(int i=1;i<LIN-1;i++)
			if (mat[i][0] == 1)
			{
				mat[i-1][0] = 1;
				mat[i][0] = 0;
			}
}

void player1MoveDown()
{
	if (mat[LIN-2][0] != 1)
		for (int i = LIN-2; i>0; i--)
			if (mat[i][0] == 1)
			{
				mat[i + 1][0] = 1;
				mat[i][0] = 0;
			}
}

void player2MoveUp()
{
	if (mat[1][COL-1] != 1)
		for (int i = 1; i<LIN-1; i++)
			if (mat[i][COL-1] == 1)
			{
				mat[i-1][COL-1] = 1;
				mat[i][COL-1] = 0;
			}
}

void player2MoveDown()
{
	if (mat[LIN-2][COL-1] != 1)
		for (int i = LIN - 2; i>0; i--)
			if (mat[i][COL-1] == 1)
			{
				mat[i+1][COL-1] = 1;
				mat[i][COL-1] = 0;
			}
}

void input()
{
/*char c;
cin >> c;
switch (c)
{
case 'w':
	player1MoveUp();
	break;
case 's':
	player1MoveDown();
	break;
case 'i':
	player2MoveUp();
	break;
case 'k':
	player2MoveDown();
	break;
case 'q':
	gameover = true;
	break;
}
*/
	if (_kbhit())
	{
		char current = _getch();
		if (current == 'w')
			player1MoveUp();
		if (current == 's')
			player1MoveDown();
		if (current == 'i')
			player2MoveUp();
		if (current == 'k')
			player2MoveDown();

		//if (b.direction == STOP)
			//randomDirection()

		if (current == 'q')
			gameover = true;
	}
}

void reset()
{

}

void move()
{
	mat[b.x][b.y] = 0;

	switch (b.directie)
	{
	case STANGA:
		b.y--;
		break;
	
	case STANGAJOS:
		b.y--;
		b.x++;
		break;

	case STANGASUS:
		b.y--;
		b.x--;
		break;

	case DREAPTA:
		b.y++;
		break;

	case DREAPTAJOS:
		b.y++;
		b.x++;
		break;

	case DREAPTASUS:
		b.y++;
		b.x--;
		break;

	}

	mat[b.x][b.y] = 2;
}

void logic()
{

	if (b.directie == STOP)
		b.directie = rand() % 6 + 1;

	//DIRECTIE STANGA
	if (b.directie >= 1 && b.directie <= 3)
	if(b.x!=LIN-2 || b.x!=1)
	{
		if (mat[b.x][b.y-1] == 1 && mat[b.x - 1][b.y - 1] == 1 && mat[b.x + 1][b.y - 1] == 1) b.directie = DREAPTA;
		if (mat[b.x][b.y - 1] == 1 && mat[b.x - 1][b.y - 1] == 0 && mat[b.x + 1][b.y - 1] == 1) b.directie = DREAPTASUS;
		if (mat[b.x][b.y - 1] == 1 && mat[b.x - 1][b.y - 1] == 1 && mat[b.x + 1][b.y - 1] == 0) b.directie = DREAPTAJOS;

	}
	else
	{

	//PERETE SUS
		if(mat[b.x - 1][b.y] == 1) 
			if (mat[b.x][b.y - 1] == 1) b.directie = DREAPTAJOS;
			else b.directie = STANGAJOS;
		
	//PERETE JOS
		if (mat[b.x + 1][b.y] == 1) 
			if (mat[b.x][b.y-1]==1) b.directie = DREAPTASUS;
			else b.directie = STANGASUS;
	}

	//DIRECTIE DREAPTA
	if (b.directie >= 4 && b.directie <= 6)
		if (b.x != LIN - 2 || b.x != 1)
		{
			if (mat[b.x][b.y + 1] == 1 && mat[b.x - 1][b.y + 1] == 1 && mat[b.x + 1][b.y + 1] == 1) b.directie = STANGA;
			if (mat[b.x][b.y + 1] == 1 && mat[b.x - 1][b.y + 1] == 0 && mat[b.x + 1][b.y + 1] == 1) b.directie = STANGASUS;
			if (mat[b.x][b.y + 1] == 1 && mat[b.x - 1][b.y + 1] == 1 && mat[b.x + 1][b.y + 1] == 0) b.directie = STANGAJOS;

		}
		else
		{

		//PERETE SUS
			if (mat[b.x - 1][b.y] == 1)
				if (mat[b.x][b.y + 1] == 1) b.directie = STANGAJOS;
				else b.directie = DREAPTAJOS;

		//PERETE JOS
				if (mat[b.x + 1][b.y] == 1)
					if (mat[b.x][b.y + 1] == 1) b.directie = STANGASUS;
					else b.directie = DREAPTASUS;
		}

	//SCORURI
	if (b.y == 0) {scor1++; reset();}
	if (b.y == COL-1) { scor2++; reset(); }

}
int main()
{
	setup();
	while (!gameover)
	{
		draw();
		input();
		logic();
		//move();
		Sleep(40);
	}
	/*while (!gameover)
	{
		draw();
		input();
		logic();
		move();
	}
	*/
	return 0;
}
